// C·∫≠p nh·∫≠t ƒë·ªìng h·ªì hi·ªán t·∫°i theo th·ªùi gian th·ª±c
function updateClock() {
    const now = new Date();
    const timeStr = now.toLocaleTimeString('vi-VN');
    document.getElementById('clock').textContent = timeStr;
  }
  
  // C·∫≠p nh·∫≠t ƒë·ªìng h·ªì m·ªói gi√¢y
  setInterval(updateClock, 1000);
  updateClock(); // G·ªçi l·∫ßn ƒë·∫ßu ƒë·ªÉ kh√¥ng b·ªã ch·∫≠m 1s
  
  let countdownInterval;
  
  // H√†m ƒë·ªãnh d·∫°ng gi√¢y th√†nh hh:mm:ss
  function formatTime(seconds) {
    const hrs = Math.floor(seconds / 3600);
    const mins = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
  
    return `${String(hrs).padStart(2, '0')}:${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
  }
  
  // B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c t·ªõi th·ªùi ƒëi·ªÉm ƒë∆∞·ª£c ch·ªçn
  function startCountdown() {
    clearInterval(countdownInterval); // D·ª´ng b·∫•t k·ª≥ ƒë·∫øm ng∆∞·ª£c c≈© n√†o
  
    const input = document.getElementById('targetTime').value;
    if (!input) {
      alert('B·∫°n vui l√≤ng nh·∫≠p th·ªùi ƒëi·ªÉm c·∫ßn ƒë·∫øm ng∆∞·ª£c t·ªõi ƒë√≥!');
      return;
    }
  
    const target = new Date(input);
  
    countdownInterval = setInterval(() => {
      const now = new Date();
      const diff = Math.floor((target - now) / 1000); // th·ªùi gian c√≤n l·∫°i t√≠nh b·∫±ng gi√¢y
  
      if (diff <= 0) {
        document.getElementById('countdown').textContent = "ƒê√£ ƒë·∫øn th·ªùi gian ƒë√≠ch!";
        clearInterval(countdownInterval);
        document.getElementById("alarm-sound").play(); // üîî Ph√°t √¢m thanh "ting"
       // üéä B·∫ÆN PH√ÅO GI·∫§Y T√ôM LUM
        let duration = 3000;
        let animationEnd = Date.now() + duration;

        let confettiInterval = setInterval(function () {
          if (Date.now() > animationEnd) {
            clearInterval(confettiInterval);
            return;
          }

      confetti({
        particleCount: 30,
        startVelocity: 40,
        spread: 360,
        ticks: 60,
        origin: {
          x: Math.random(),
          y: Math.random() * 0.6
        }
      });
    }, 200);
      } else {
        document.getElementById('countdown').textContent = `Th·ªùi gian c√≤n l·∫°i: ${formatTime(diff)}`;
      }
    }, 1000);
  }
  
  //Th√¥ng b√°o c·∫ßn nh·∫≠p th·ªùi gian ƒë√≠ch
  function NoticeCountDown(){
    alert(`B·∫°n h√£y nh·∫≠p m·ªôt m·ªëc th·ªùi gian ƒë·ªÉ c√≥ th·ªÉ b·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c!`)
  }
  
  let music = new Audio();

  const songs = [
    {
    id:'1',
    songname:`Gi√†y Cao G√≥t M√†u ƒê·ªè
    <div class="subtitle">Lu√¢n Tang</div>`,
    poster:"Covers/1.png",
    hitname: `Gi√†y Cao G√≥t M√†u ƒê·ªè`,

    },
    {
        id:'2',
        songname:`Th√°p R∆°i T·ª± Do
        <div class="subtitle">LBI L·ª£i B·ªâ</div>`,
        poster:"Covers/2.png",
        hitname: `Th√°p R∆°i T·ª± Do`,
    },
    {
        id:'3',
        songname:`G√≥i G·ªçn H·ªìi ·ª®c Trao Anh
        <div class="subtitle">V∆∞∆°ng Nh·ªã L√£ng</div>`,
        poster:"Covers/3.png",
        hitname: `G√≥i G·ªçn H·ªìi ·ª®c Trao Anh`,
    },
     {
        id:'4',
        songname:`ƒê·ª£i ƒê·∫øn Th√°ng 13
        <div class="subtitle">Tr·∫ßn Ti·ªÉu M√£n</div>`,
        poster:"Covers/4.png",
        hitname: `ƒê·ª£i ƒê·∫øn Th√°ng 13`,
    },
      { id:'5',
        songname:`L√† Anh
        <div class="subtitle">M·ªông Nhi√™n</div>`,
        poster:"Covers/5.png",
        hitname: `L√† Anh`,
     },
     { id:'6',
        songname:`ƒê√¥ng Mi√™n 2023
        <div class="subtitle">A Nguy·ªát Nguy·ªát, L∆∞u Tri·ªáu V≈©</div>`,
        poster:"Covers/6.png",
        hitname: `ƒê√¥ng Mi√™n 2023`,
     },
     { id:'7',
        songname:`N·∫øu √Ånh TrƒÉng Kh√¥ng ƒê·∫øn
        <div class="subtitle">V∆∞∆°ng V≈© Tr·ª• Leto</div>`,
        poster:"Covers/7.png",
        hitname: `N·∫øu √Ånh TrƒÉng Kh√¥ng ƒê·∫øn`,
     },
     { id:'8',
        songname:`Phi ƒêi·ªÉu V√† Ve S·∫ßu
        <div class="subtitle">Nh·∫≠m Nhi√™n</div>`,
        poster:"Covers/8.png",
        hitname: `Phi ƒêi·ªÉu V√† Ve S·∫ßu`,
     },
     { id:'9',
        songname:`G·∫∑p Em ƒê√∫ng L√∫c
        <div class="subtitle">Lu√¢n Tang</div>`,
        poster:"Covers/9.png",
        hitname: `G·∫∑p Em ƒê√∫ng L√∫c`,
     },
     { id:'10',
        songname:`M·ªôt Tri·ªáu Kh·∫£ NƒÉng
        <div class="subtitle">Christine Welch </div>`,
        poster:"Covers/10.png",
        hitname: `M·ªôt Tri·ªáu Kh·∫£ NƒÉng`,
     },
     { id:'11',
        songname:`N·∫øu V√≠ Anh Nh∆∞
        <div class="subtitle">Kirsty L∆∞u C·∫©n Du·ªá </div>`,
        poster:"Covers/11.png",
        hitname: `N·∫øu V√≠ Anh Nh∆∞`,
     },
      { id:'12',
        songname:`S·ª© Thanh Hoa
        <div class="subtitle">Ch√¢u Ki·ªát Lu√¢n </div>`,
        poster:"Covers/12.png",
        hitname: `S·ª© Thanh Hoa`,
     },
    
  ]



let masterPlay = document.getElementById('masterPlay');
let wave = document.getElementsByClassName('wave')[0];

masterPlay.addEventListener('click',(e)=>{
   if (!music.src) {
    // N·∫øu ch∆∞a ph√°t b√†i n√†o th√¨ load b√†i ƒë·∫ßu ti√™n
    index = 1;
    music.src = `Musics/${index}.mp3`;
    poster_master_play.src = `Covers/${index}.png`;
    music.play();
      masterPlay.classList.remove('bi-play-fill');
      masterPlay.classList.add('bi-pause-fill');
      wave.classList.add('active2');
    
    let song_title = songs.find(ele => ele.id == index);
    if (song_title) {
      title.innerHTML = song_title.songname;
      title_album.innerHTML = song_title.songname;
      poster_album.src = `Covers/${song_title.id}.png`;
    }
  }

    if(music.paused || music.currentTime<=0){
        music.play();
        masterPlay.classList.remove('bi-play-fill');
        masterPlay.classList.add('bi-pause-fill');
        wave.classList.add('active2');
    }else{
        music.pause();
        masterPlay.classList.add('bi-play-fill');
        masterPlay.classList.remove('bi-pause-fill');
        wave.classList.remove('active2');
        
    }

})

document.addEventListener('keydown', function (e) {
  // N·∫øu ƒëang focus v√†o input ho·∫∑c textarea th√¨ kh√¥ng l√†m g√¨
  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;

  // N·∫øu ph√≠m l√† Space (ph√≠m c√°ch)
  if (e.code === 'Space') {
    e.preventDefault(); // ngƒÉn tr√¨nh duy·ªát cu·ªôn trang
    masterPlay.click(); // g·ªçi click gi·ªëng nh∆∞ ·∫•n n√∫t play
  }
});



let currentStart = document.getElementById('currentStart');
let currentEnd = document.getElementById('currentEnd');
let seekbar = document.getElementById('seek');
let bar2 = document.getElementById('bar2');
let dot = document.getElementsByClassName('dot')[0];


music.addEventListener('timeupdate',()=>{
    let music_curr = music.currentTime;
    let music_dur = music.duration;

    let min = Math.floor(music_dur/60);
    let sec = Math.floor(music_dur%60);
    if(sec<10){
        sec = `0${sec}`;
    }

    currentEnd.innerText = `${min}:${sec}`;
    let min1 = Math.floor(music_curr/60);
    let sec1 = Math.floor(music_curr%60);
    if(sec1<10){
        sec1 = `0${sec1}`;
    }

    currentStart.innerText = `${min1}:${sec1}`;

    let progressbar = parseInt((music.currentTime/music.duration)*100);
    seek.value = progressbar;
    let seekbar = seek.value;
    bar2.style.width = `${seekbar}%`;
    dot.style.left = `${seekbar}%`;

})

seek.addEventListener('change',()=>{
    music.currentTime = seek.value * music.duration/100;
})
music.addEventListener('ended',()=>{
    
    masterPlay.classList.add('bi-pause-fill');
    wave.classList.add('active2');
    index ++;
    if(index > songs.length){
        index = 1;
    }
    
    music.src = `Musics/${index}.mp3`;
    poster_master_play.src = `Covers/${index}.png`;
    music.play();

    let song_title = songs.filter((ele)=>{
        return ele.id == index;
    })
    song_title.forEach(ele=>{
        let {songname} = ele;
        title.innerHTML = songname;
        
    })
    
    song_title.forEach(ele=>{
        let {lyrics} = ele;
        lyrical.innerHTML = lyrics;
        let {songname} = ele;
        title_album.innerHTML = songname;
        poster_album.src = `Covers/${ele.id}.png`;
    })
    
   
    document.getElementsByClassName('playListPlay')[index-1].classList.remove('bi-play-circle-fill');
    document.getElementsByClassName('playListPlay')[index-1].classList.add('bi-pause-circle-fill');
    
    
    
})


let vol_icon = document.getElementById('vol_icon');
let vol = document.getElementById('vol');
let vol_dot = document.getElementById('vol_dot');
let vol_bar = document.getElementsByClassName('vol_bar')[0];

vol.addEventListener('change',()=>{
    if(vol.value == 0){
        vol_icon.classList.remove('bi-volume-down-fill');
        vol_icon.classList.add('bi-volume-mute-fill');
        vol_icon.classList.remove('bi-volume-up-fill');
    }
    if(vol.value>0 ){
        vol_icon.classList.add('bi-volume-down-fill');
        vol_icon.classList.remove('bi-volume-mute-fill');
        vol_icon.classList.remove('bi-volume-up-fill');
    }
    if(vol.value>50) {
        vol_icon.classList.remove('bi-volume-down-fill');
        vol_icon.classList.remove('bi-volume-mute-fill');
        vol_icon.classList.add('bi-volume-up-fill');
    }
    let vol_a = vol.value;
    vol_bar.style.width = `${vol_a}%`;
    vol_dot.style.left = `${vol_a}%`;
    music.volume = vol_a/100;
})

let back = document.getElementById('back');
let next = document.getElementById('next');


back.addEventListener('click',()=>{
    index -=1;
    if(index < 1){
        index = songs.length;
    }

    music.src = `Musics/${index}.mp3`;
        poster_master_play.src = `Covers/${index}.png`;
        music.play();
        let song_title = songs.filter((ele)=>{
            return ele.id == index;
        })
        song_title.forEach(ele=>{
            let {songname} = ele;
            title.innerHTML = songname;
        })
        document.getElementById(`${index}`).classList.remove('bi-play-fill');
        document.getElementById(`${index}`).classList.add('bi-pause-fill');

        
})


next.addEventListener('click',()=>{
    index -= 0;
    index +=1;
    if(index > songs.length){
        index = 1;
    }
    music.src = `Musics/${index}.mp3`;
        poster_master_play.src = `Covers/${index}.png`;
        music.play();
        let song_title = songs.filter((ele)=>{
            return ele.id == index;
        })
        song_title.forEach(ele=>{
            let {songname} = ele;
            title.innerHTML = songname;
        })
        document.getElementById(`${index}`).classList.remove('bi-play-fill');
        document.getElementById(`${index}`).classList.add('bi-pause-fill');
        makeAllBackgrounds();
        
})

const bgList = ['url("BG/bg1.jpg")',
                'url("BG/bg2.jpg")',
                'url("BG/bg3.jpg")',
                'url("BG/bg4.jpg")',
                'url("BG/bg5.jpg")',
                'url("BG/bg6.jpg")',
                'url("BG/bg7.jpg")',
                'url("BG/bg8.jpg")',
                'url("BG/bg9.jpg")',
                'url("BG/bg10.jpg")',
                'url("BG/bg11.jpg")',
                'url("BG/bg12.jpg")',
                'url("BG/bg13.jpg")',
                'url("BG/bg14.jpg")',
                'url("BG/bg15.jpg")',
                'url("BG/bg16.jpg")',
                'url("BG/bg17.jpg")',
                'url("BG/bg18.jpg")',
                'url("BG/bg19.jpg")',
                'url("BG/bg20.jpg")',
              ];

function changeBackground() {
  const randomIndex = Math.floor(Math.random() * bgList.length);
  document.body.style.backgroundImage = bgList[randomIndex];
}

changeBackground(); // Kh·ªüi t·∫°o
setInterval(changeBackground, 30000); // ƒê·ªïi m·ªói 30 gi√¢y

function resizeTitleFont() {
  const titleEl = document.getElementById('title');
  const subtitleEl = document.getElementById('subtitle');

  if (!titleEl || !subtitleEl) return; // tr√°nh l·ªói n·∫øu ko t√¨m th·∫•y

  let titleText = '';
  titleEl.childNodes.forEach(node => {
    if (node.nodeType === Node.TEXT_NODE) {
      titleText += node.textContent.trim() + ' ';
    }
  });
  titleText = titleText.trim();

  const subtitleText = subtitleEl.textContent.trim();

  const titleWordCount = titleText.split(/\s+/).filter(Boolean).length;
  const subtitleWordCount = subtitleText.split(/\s+/).filter(Boolean).length;

  if (titleWordCount > 5) {
    titleEl.style.setProperty('font-size', '12px', 'important');
  } else {
    titleEl.style.fontSize = '16px';
  }

  if (subtitleWordCount > 6) {
    subtitleEl.style.fontSize = '10px';
  } else {
    subtitleEl.style.fontSize = '12px';
  }
}

window.addEventListener('DOMContentLoaded', resizeTitleFont);


function setGreeting() {
  const greetingEl = document.getElementById('greeting');
  const hour = new Date().getHours();

  let greetingText = '';

  if (hour >= 5 && hour < 12) {
    greetingText = 'Ch√†o bu·ªïi s√°ng üåû';
  } else if (hour >= 12 && hour < 18) {
    greetingText = 'Ch√†o bu·ªïi chi·ªÅu üå§Ô∏è';
  } else {
    greetingText = 'Ch√†o bu·ªïi t·ªëi üåô';
  }

  greetingEl.textContent = greetingText;
}

// G·ªçi t·ª± ƒë·ªông khi trang t·∫£i xong (n·∫øu mu·ªën)
window.addEventListener('DOMContentLoaded', setGreeting);